{"remainingRequest":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/babel-loader/lib/index.js!/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/luca/Desktop/RIOT-GreenHouse/WebInterface/src/components/MyGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/src/components/MyGraph.vue","mtime":1617181541641},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAndnVlLWFwZXhjaGFydHMnOwppbXBvcnQgbW9tZW50IGZyb20gIm1vbWVudCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTXlHcmFwaCIsCiAgY29tcG9uZW50czogewogICAgVnVlQXBleENoYXJ0czogVnVlQXBleENoYXJ0cwogIH0sCiAgcHJvcHM6IFsndmFsdWVzJywgJ3RzJywgJ25hbWUnLCAndmFsJywgJ2NvbG9yJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0T3B0aW9uczogewogICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICBoZWlnaHQ6IDM1MCwKICAgICAgICAgIHR5cGU6ICdsaW5lJwogICAgICAgIH0sCiAgICAgICAgc3Ryb2tlOiB7CiAgICAgICAgICBjdXJ2ZTogJ3N0ZXBsaW5lJwogICAgICAgIH0sCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6IHRoaXMubmFtZSwKICAgICAgICAgIGFsaWduOiAnbGVmdCcKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHJvdzogewogICAgICAgICAgICBjb2xvcnM6IFsnI2YzZjNmMycsICd0cmFuc3BhcmVudCddLAogICAgICAgICAgICAvLyB0YWtlcyBhbiBhcnJheSB3aGljaCB3aWxsIGJlIHJlcGVhdGVkIG9uIGNvbHVtbnMKICAgICAgICAgICAgb3BhY2l0eTogMC41CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB4YXhpczogewogICAgICAgICAgY2F0ZWdvcmllczogW10KICAgICAgICB9LAogICAgICAgIGNvbG9yczogW3RoaXMuY29sb3JdCiAgICAgIH0sCiAgICAgIHNlcmllczogW3sKICAgICAgICBuYW1lOiB0aGlzLm5hbWUsCiAgICAgICAgZGF0YTogW10KICAgICAgfV0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVWYWx1ZXM6IGZ1bmN0aW9uIHVwZGF0ZVZhbHVlcyhkYXRhKSB7CiAgICAgIHRoaXMuc2VyaWVzID0gW3sKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH1dOwogICAgfSwKICAgIHVwZGF0ZVRzOiBmdW5jdGlvbiB1cGRhdGVUcyhkYXRhKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgbGFiZWxzID0gZGF0YS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4gX3RoaXMuZm9ybWF0VGltZXN0YW1wKHgudGltZXN0YW1wKTsKICAgICAgfSk7CiAgICAgIHZhciB4YXhpcyA9IHsKICAgICAgICBjYXRlZ29yaWVzOiBsYWJlbHMKICAgICAgfTsKICAgICAgdGhpcy5jaGFydE9wdGlvbnMgPSB7CiAgICAgICAgeGF4aXM6IHhheGlzCiAgICAgIH07CiAgICB9LAogICAgZm9ybWF0VGltZXN0YW1wOiBmdW5jdGlvbiBmb3JtYXRUaW1lc3RhbXAodHMpIHsKICAgICAgcmV0dXJuIG1vbWVudCh0cykuZm9ybWF0KCJMTEwiKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAndmFsdWVzJzogZnVuY3Rpb24gdmFsdWVzKCkgewogICAgICB0aGlzLnVwZGF0ZVZhbHVlcyh0aGlzLnZhbHVlcyk7CiAgICB9LAogICAgJ3RzJzogZnVuY3Rpb24gdHMoKSB7CiAgICAgIHRoaXMudXBkYXRlVHModGhpcy50cyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["MyGraph.vue"],"names":[],"mappings":";;;;;;;;;AAMA,OAAA,aAAA,MAAA,gBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA,CAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,MAAA,EAAA,GADA;AAEA,UAAA,IAAA,EAAA;AAFA,SADA;AAKA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA,SALA;AAQA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,KAAA,IADA;AAEA,UAAA,KAAA,EAAA;AAFA,SARA;AAYA,QAAA,IAAA,EAAA;AACA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,EAAA,CAAA,SAAA,EAAA,aAAA,CADA;AACA;AACA,YAAA,OAAA,EAAA;AAFA;AADA,SAZA;AAkBA,QAAA,KAAA,EAAA;AACA,UAAA,UAAA,EAAA;AADA,SAlBA;AAqBA,QAAA,MAAA,EAAA,CAAA,KAAA,KAAA;AArBA,OADA;AAwBA,MAAA,MAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA,KAAA,IADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAAA;AAxBA,KAAA;AA8BA,GArCA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,IADA,EACA;AACA,WAAA,MAAA,GAAA,CAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA,CAAA;AAGA,KALA;AAMA,IAAA,QANA,oBAMA,IANA,EAMA;AAAA;;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,KAAA,CAAA,eAAA,CAAA,CAAA,CAAA,SAAA,CAAA;AAAA,OAAA,CAAA;AAEA,UAAA,KAAA,GAAA;AACA,QAAA,UAAA,EAAA;AADA,OAAA;AAGA,WAAA,YAAA,GAAA;AACA,QAAA,KAAA,EAAA;AADA,OAAA;AAGA,KAfA;AAgBA,IAAA,eAhBA,2BAgBA,EAhBA,EAgBA;AACA,aAAA,MAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA;AAlBA,GAtCA;AA0DA,EAAA,KAAA,EAAA;AACA,cAAA,kBAAA;AACA,WAAA,YAAA,CAAA,KAAA,MAAA;AACA,KAHA;AAIA,UAAA,cAAA;AACA,WAAA,QAAA,CAAA,KAAA,EAAA;AACA;AANA;AA1DA,CAAA","sourcesContent":["<template>\n  <vue-apex-charts ref=\"realtimeChart\" type=\"line\" height=\"350\" :options=\"chartOptions\"\n                   :series=\"series\"></vue-apex-charts>\n</template>\n\n<script>\nimport VueApexCharts from 'vue-apexcharts'\nimport moment from \"moment\"\n\nexport default {\n  name: \"MyGraph\",\n  components: {\n    VueApexCharts\n  },\n  props: ['values', 'ts', 'name', 'val','color'],\n  data() {\n    return {\n      chartOptions: {\n        chart: {\n          height: 350,\n          type: 'line'\n        },\n        stroke: {\n          curve: 'stepline'\n        },\n        title: {\n          text: this.name,\n          align: 'left'\n        },\n        grid: {\n          row: {\n            colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n            opacity: 0.5\n          },\n        },\n        xaxis: {\n          categories: [],\n        },\n        colors: [this.color],\n      },\n      series: [{\n        name: this.name,\n        data: []\n      }],\n\n    }\n  },\n  methods: {\n    updateValues(data) {\n      this.series = [{\n        data: data\n      }]\n    },\n    updateTs(data) {\n      const labels = data.map(x => this.formatTimestamp(x.timestamp));\n\n      const xaxis = {\n        categories: labels\n      }\n      this.chartOptions = {\n        xaxis: xaxis\n      };\n    },\n    formatTimestamp(ts) {\n      return moment(ts).format(\"LLL\")\n    },\n  },\n  watch: {\n    'values': function () {\n      this.updateValues(this.values)\n    },\n    'ts': function () {\n      this.updateTs(this.ts)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}
{"remainingRequest":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/luca/Desktop/RIOT-GreenHouse/WebInterface/src/components/Sensors.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/src/components/Sensors.vue","mtime":1617183770743},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgTXlHcmFwaCBmcm9tICJAL2NvbXBvbmVudHMvTXlHcmFwaCI7Cgpjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJykuZGVmYXVsdDsKCmltcG9ydCBNaW5NYXhBdmcgZnJvbSAiQC9jb21wb25lbnRzL01pbk1heEF2ZyI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IgppbXBvcnQgQnV0dG9uUGFuZWwgZnJvbSAiQC9jb21wb25lbnRzL0J1dHRvblBhbmVsIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2Vuc29ycyIsCiAgY29tcG9uZW50czogewogICAgQnV0dG9uUGFuZWwsCiAgICBNeUdyYXBoLAogICAgTWluTWF4QXZnLAogIH0sCiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgZmV0Y2hfZGF0YV91cmw6ICJodHRwczovL3A0YXozeG0zZ2YuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZGVmYXVsdC9ncmVlbkhvdXNlRGF0YUpTIiwKICAgICAgcmVjZWl2ZWRfZGF0YTogW10sCiAgICAgIGxhc3RfdXBkYXRlOiB7fSwKICAgICAgVEVNUF9DT0xPUjogIiNlZjQ3NmYiLAogICAgICBIVU1JRElUWV9DT0xPUjogIiNmZmQxNjYiLAogICAgICBTT0lMX0NPTE9SOiAiIzA2ZDZhMCIKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmxvYWREYXRhKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGZvcm1hdFRpbWVzdGFtcCh0cykgewogICAgICByZXR1cm4gbW9tZW50KHRzKS5mb3JtYXQoIkxMTCIpCiAgICB9LAogICAgbG9hZERhdGEoKSB7CiAgICAgIGF4aW9zLnBvc3QodGhpcy4kZGF0YS5mZXRjaF9kYXRhX3VybCkKICAgICAgICAgIC50aGVuKGQgPT4gewogICAgICAgICAgICB0aGlzLiRkYXRhLnJlY2VpdmVkX2RhdGEgPSBkLmRhdGEuSXRlbXMKCiAgICAgICAgICAgIGNvbnN0IG9yZGVyZWRfcmVjZWl2ZWRfZGF0YSA9IHRoaXMuJGRhdGEucmVjZWl2ZWRfZGF0YS5zb3J0KCh4LCB5KSA9PiB7CiAgICAgICAgICAgICAgaWYgKHgudGltZXN0YW1wIDwgeS50aW1lc3RhbXApIHJldHVybiAtMTsKICAgICAgICAgICAgICBlbHNlIGlmICh4LnRpbWVzdGFtcCA+IHkudGltZXN0YW1wKSByZXR1cm4gMTsKICAgICAgICAgICAgICBlbHNlIHJldHVybiAwCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuJGRhdGEubGFzdF91cGRhdGUgPSBvcmRlcmVkX3JlY2VpdmVkX2RhdGFbb3JkZXJlZF9yZWNlaXZlZF9kYXRhLmxlbmd0aCAtIDFdOwoKICAgICAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Sensors.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Sensors.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <MinMaxAvg title=\"Temperature\" unit=\"Â°C\" :color=\"this.TEMP_COLOR\" v-bind:data=\"this.$data.received_data.map(x=>x.temperature)\"></MinMaxAvg>\n    <MinMaxAvg title=\"Humidity\" unit=\"%\" :color=\"this.HUMIDITY_COLOR\" v-bind:data=\"this.$data.received_data.map(x=>x.humidity)\"></MinMaxAvg>\n    <MinMaxAvg title=\"Soil moisture\" unit=\"%\" :color=\"this.SOIL_COLOR\" v-bind:data=\"this.$data.received_data.map(x=>x.soil)\"></MinMaxAvg>\n    <br>\n    <p><b>Last update: </b>{{ this.formatTimestamp(this.$data.last_update.timestamp) }}</p>\n    <p><b>Water level: </b>{{ this.$data.last_update.water_level }}%</p>\n    <p><b>Window: </b>{{ this.$data.last_update.servo == 180 ? 'open' : 'close' }}</p>\n    <p><b>Pump state: </b>{{ this.$data.last_update.pump == 1 ? 'on' : 'off' }}</p>\n\n    <ButtonPanel></ButtonPanel>\n    <div style=\"display: flex; flex-direction: row;\">\n\n      <my-graph style=\"flex: 30%\" v-bind:values=\"this.$data.received_data.map(x=>x.temperature)\"\n                v-bind:ts=\"this.$data.received_data.map(x=>x.timestamp)\" name=\"Temperature\" :color=\"this.TEMP_COLOR\">\n      </my-graph>\n\n      <my-graph style=\"flex: 30%\" v-bind:values=\"this.$data.received_data.map(x=>x.humidity)\"\n                v-bind:ts=\"this.$data.received_data.map(x=>x.timestamp)\" name=\"Humidity\" :color=\"this.HUMIDITY_COLOR\">\n      </my-graph>\n\n      <my-graph style=\"flex: 30%\" v-bind:values=\"this.$data.received_data.map(x=>x.soil)\"\n                v-bind:ts=\"this.$data.received_data.map(x=>x.timestamp)\" name=\"Soil moisture\" :color=\"this.SOIL_COLOR\">\n      </my-graph>\n\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport MyGraph from \"@/components/MyGraph\";\n\nconst axios = require('axios').default;\n\nimport MinMaxAvg from \"@/components/MinMaxAvg\";\nimport moment from \"moment\"\nimport ButtonPanel from \"@/components/ButtonPanel\";\n\nexport default {\n  name: \"Sensors\",\n  components: {\n    ButtonPanel,\n    MyGraph,\n    MinMaxAvg,\n  },\n  data: function () {\n    return {\n      fetch_data_url: \"https://p4az3xm3gf.execute-api.us-east-1.amazonaws.com/default/greenHouseDataJS\",\n      received_data: [],\n      last_update: {},\n      TEMP_COLOR: \"#ef476f\",\n      HUMIDITY_COLOR: \"#ffd166\",\n      SOIL_COLOR: \"#06d6a0\"\n    }\n  },\n  mounted() {\n    this.loadData()\n  },\n  methods: {\n    formatTimestamp(ts) {\n      return moment(ts).format(\"LLL\")\n    },\n    loadData() {\n      axios.post(this.$data.fetch_data_url)\n          .then(d => {\n            this.$data.received_data = d.data.Items\n\n            const ordered_received_data = this.$data.received_data.sort((x, y) => {\n              if (x.timestamp < y.timestamp) return -1;\n              else if (x.timestamp > y.timestamp) return 1;\n              else return 0\n            })\n            this.$data.last_update = ordered_received_data[ordered_received_data.length - 1];\n\n          })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}
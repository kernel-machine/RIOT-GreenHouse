{"remainingRequest":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/luca/Desktop/RIOT-GreenHouse/WebInterface/src/components/MinMaxAvg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/src/components/MinMaxAvg.vue","mtime":1617183058349},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/luca/Desktop/RIOT-GreenHouse/WebInterface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWluTWF4QXZnIiwKICBwcm9wczogWydkYXRhJywgJ3RpdGxlJywgJ3VuaXQnLCAnY29sb3InXSwKICBtZXRob2RzOiB7CiAgICBtaW5WYWx1ZShkYXRhcykgewogICAgICByZXR1cm4gZGF0YXMucmVkdWNlKChhY2MsIGN1cnJlbnQpID0+IHsKICAgICAgICByZXR1cm4gTWF0aC5taW4oYWNjLCBjdXJyZW50KQogICAgICB9KQogICAgfSwKICAgIGF2Z1ZhbHVlKGRhdGFzKSB7CiAgICAgIGxldCBhdmcgPSBkYXRhcy5yZWR1Y2UoKGFjYywgY3VycmVudCkgPT4gewogICAgICAgIHJldHVybiBhY2MgKyBjdXJyZW50CiAgICAgIH0pIC8gZGF0YXMubGVuZ3RoCgogICAgICByZXR1cm4gTWF0aC5mbG9vcihhdmcpCiAgICB9LAogICAgbWF4VmFsdWUoZGF0YXMpIHsKICAgICAgcmV0dXJuIGRhdGFzLnJlZHVjZSgoYWNjLCBjdXJyZW50KSA9PiB7CiAgICAgICAgcmV0dXJuIE1hdGgubWF4KGFjYywgY3VycmVudCkKICAgICAgfSkKICAgIH0sCiAgfQp9Cg=="},{"version":3,"sources":["MinMaxAvg.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MinMaxAvg.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div v-if=\"this.data.length>0\">\n    <h3 :style=\"{color:this.color}\"><b>{{ this.title }}</b></h3>\n    <p>\n      <b>min:</b> {{ this.minValue(this.data) }} {{ this.unit }}\n      <b>avg:</b> {{ this.avgValue(this.data) }} {{ this.unit }}\n      <b>max:</b> {{ this.maxValue(this.data) }} {{ this.unit }}\n    </p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MinMaxAvg\",\n  props: ['data', 'title', 'unit', 'color'],\n  methods: {\n    minValue(datas) {\n      return datas.reduce((acc, current) => {\n        return Math.min(acc, current)\n      })\n    },\n    avgValue(datas) {\n      let avg = datas.reduce((acc, current) => {\n        return acc + current\n      }) / datas.length\n\n      return Math.floor(avg)\n    },\n    maxValue(datas) {\n      return datas.reduce((acc, current) => {\n        return Math.max(acc, current)\n      })\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>"]}]}